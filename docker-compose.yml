version: '3.8'

services:
  app:
    build: .
    container_name: python_app
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://kts_user:kts_pass@postgres:5432/kts
    networks:
      - db_network
    volumes:
      - ./app/:/project/app
      - ./config.yml:/project/config.yml
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped

  poller:
    build: poller/.
    container_name: poller_app
    ports:
      - "8989:8989"

    networks:
      - db_network
    volumes:
      - ./poller/app/:/project/app
      - ./poller/config.yml:/project/config.yml
    depends_on:
      - postgres
      - rabbitmq
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: postgres_db
    environment:
      POSTGRES_DB: kts
      POSTGRES_USER: kts_user
      POSTGRES_PASSWORD: kts_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db_network
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:7
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "80:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - db_network
    restart: unless-stopped
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    hostname: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=password
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - db_network

volumes:
  postgres_data:
  pgadmin_data:
  rabbitmq_data:

networks:
  db_network:
    driver: bridge