"""Initial tables

Revision ID: 7355957bff78
Revises: 325b9ce689d7
Create Date: 2025-10-02 13:19:47.736244

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7355957bff78'
down_revision: Union[str, None] = '325b9ce689d7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('sessions',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='statussession'), nullable=True),
    sa.Column('chat_id', sa.BigInteger(), nullable=True),
    sa.Column('current_state', sa.Enum('INACTIVE', 'WAITING_FOR_PLAYERS', 'ARE_READY_FIRST_ROUND_PLAYERS', 'QUESTION_DISCUTION', 'VERDICT_CAPTAIN', 'WAIT_ANSWER', 'ARE_READY_NEXT_ROUND_PLAYERS', name='gamestate'), nullable=True),
    sa.Column('current_round_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['current_round_id'], ['rounds.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('current_round_id'),
    sa.UniqueConstraint('id')
    )
    op.add_column('players', sa.Column('session_id', sa.BigInteger(), nullable=True))
    op.create_unique_constraint(None, 'players', ['id'])
    op.create_foreign_key(None, 'players', 'sessions', ['session_id'], ['id'], ondelete='CASCADE')
    op.add_column('rounds', sa.Column('session_id', sa.BigInteger(), nullable=True))
    op.create_foreign_key(None, 'rounds', 'sessions', ['session_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    op.drop_column('rounds', 'session_id')
    op.drop_column('players', 'session_id')
    op.drop_table('sessions')
    op.execute('DROP TYPE IF EXISTS statussession')
    op.execute('DROP TYPE IF EXISTS gamestate')
    # ### end Alembic commands ###
